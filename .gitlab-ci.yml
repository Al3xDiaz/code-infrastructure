---
apply:
  cache:
    key: build_cache
    paths:
      - terraform/.terraform
      - terraform/.terraform.lock.hcl
      - terraform/.terraform.tfstate
      - terraform/.terraform.tfstate.backup
      - terraform/terraform_output.txt
      - terraform/.auto.tfvars
      - terraform/backend.auto.tfvars
      - home/
  environment: production
  only:
    - main
  script:
    - cd terraform/
    - terraform apply -auto-approve
    - terraform output -raw servers > terraform_output.txt
  stage: apply
before_script:
  - mkdir -p ~/.ssh
  - cp $id_private_key ~/.ssh/ansible
  - cp $id_public_key ~/.ssh/ansible.pub
config_infrastructure:
  cache:
    key: build_cache
    paths:
      - terraform/terraform_output.txt
  environment: production
  image:
    entrypoint: ['']
    name: registry.gitlab.com/chaoticteams/ansible
  only:
    - main
  script:
    - cp terraform/terraform_output.txt ansible/inventory
    - cd ansible/
    - ansible-playbook main.yml
  stage: config_infrastructure
  variables:
    ANSIBLE_PIPELINING: 'true'
destroy:
  cache:
    key: build_cache
    paths:
      - terraform/.terraform
      - terraform/.terraform.lock.hcl
      - terraform/.terraform.tfstate
      - terraform/.terraform.tfstate.backup
      - terraform/.auto.tfvars
      - terraform/backend.auto.tfvars
      - home/
  environment: production
  only:
    - main
  script:
    - cd terraform/
    - terraform destroy -auto-approve
  stage: destroy
  when: manual
image:
  entrypoint: ['']
  name: hashicorp/terraform
init:
  cache:
    key: build_cache
    paths:
      - terraform/.terraform
      - terraform/.terraform.lock.hcl
      - terraform/.terraform.tfstate
      - terraform/.terraform.tfstate.backup
      - terraform/gitlab.auto.
      - terraform/.auto.tfvars
      - terraform/backend.auto.tfvars
      - home/
  script:
    - cd terraform/
    - cp $tf_vars .auto.tfvars
    - cp $tf_backend backend.auto.tfvars
    - terraform init -backend-config=backend.auto.tfvars
    - terraform validate
  stage: init-validate
services:
  - hashicorp/terraform:light
stages:
  - init-validate
  - apply
  - destroy
  - config_infrastructure
variables:
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  SECURE_FILES_DOWNLOAD_PATH: terraform
  TF_VAR_id_private_key_path: .ssh/ansible
  TF_VAR_id_public_key_path: .ssh/anisble.pub