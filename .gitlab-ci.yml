image: docker:20.10.16
services:
  - docker:20.10.16-dind

stages:
  - init-validate
  - plan
  - apply

variables:
  SECURE_FILES_DOWNLOAD_PATH: 'terraform'

  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

  example_remote_state_address: $EXAMPLE_REMOTE_STATE_ADDRESS
  example_username: $EXAMPLE_USERNAME
  example_access_token: $EXAMPLE_ACCESS_TOKEN

init:
  stage: init-validate
  cache:
    key: build_cache
    paths:
     - terraform/.terraform
     - terraform/.terraform.lock.hcl
     - terraform/.terraform.tfstate
     - terraform/.terraform.tfstate.backup
     - terraform/gitlab.auto.tfvars
     - home/

  script:
    - echo "example_remote_state_address=\"$example_remote_state_address\"" > terraform/gitlab.auto.tfvars
    - echo "example_username=\"$example_username\"" >> terraform/gitlab.auto.tfvars
    - echo "example_access_token=\"$EXAMPLE_ACCESS_TOKEN\"" >> terraform/gitlab.auto.tfvars
    - docker-compose run --rm --entrypoint /root/terraform/terraform-init.sh terraform
    - docker-compose run --rm  --entrypoint terraform terraform validate

plan:
  stage: plan
  cache:
    key: build_cache
    paths:
     - terraform/.terraform
     - terraform/.terraform.lock.hcl
     - terraform/.terraform.tfstate
     - terraform/.terraform.tfstate.backup
     - terraform/gitlab.auto.tfvars
     - home/

  script:
    - docker-compose run --rm  --entrypoint terraform terraform plan
  only:
    - main

apply:
  stage: apply
  cache:
    key: build_cache
    paths:
     - terraform/.terraform
     - terraform/.terraform.lock.hcl
     - terraform/.terraform.tfstate
     - terraform/.terraform.tfstate.backup
     - terraform/gitlab.auto.tfvars
     - home/

  script:
    - docker-compose run --rm  --entrypoint terraform terraform apply -auto-approve
  only:
    - main
  environment: production